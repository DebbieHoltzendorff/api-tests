<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gedcomx.Date</name>
    </assembly>
    <members>
        <member name="T:Gedcomx.Date.GedcomxDate">
            <summary>
            Represents a basic GEDCOM X date.
            </summary>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDate.IsApproximate">
            <summary>
            Determines whether this date is approximate.
            </summary>
            <returns><c>true</c> if this date is approximate; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDate.ToFormalString">
            <summary>
            The formal representation of this date.
            </summary>
            <returns>The formal representation of this date.</returns>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDate.Type">
            <summary>
            Gets the type of GEDCOM X date.
            </summary>
            <value>
            The type of GEDCOM X date.
            </value>
        </member>
        <member name="T:Gedcomx.Date.GedcomxDateApproximate">
            <summary>
            Represents an approximate GEDCOM X date.
            </summary>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateApproximate.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.Date.GedcomxDateApproximate"/> class.
            </summary>
            <param name="date">The formal duration string that describes a GEDCOM X date approximation.</param>
            <exception cref="T:Gedcomx.Date.GedcomxDateException">Thrown if the specified date is null, empty, or does not begin with 'A' (as required by a formal date string).</exception>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateApproximate.IsApproximate">
            <summary>
            Determines whether this date is approximate. This method always returns <c>true</c> for this instance.
            </summary>
            <returns>
              <c>true</c> if this date is approximate; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateApproximate.ToFormalString">
            <summary>
            The formal representation of this date.
            </summary>
            <returns>
            The formal representation of this date.
            </returns>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateApproximate.SimpleDate">
            <summary>
            Gets the underlying simple date.
            </summary>
            <value>
            The underlying simple date.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateApproximate.Type">
            <summary>
            Gets the type of GEDCOM X date. This property always returns APPROXIMATE for this instance.
            </summary>
            <value>
            The type of GEDCOM X date.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateApproximate.Year">
            <summary>
            Gets the year of the current date if it exists.
            </summary>
            <value>
            The year of the current date if it exists.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateApproximate.Month">
            <summary>
            Gets the month of the current date if it exists.
            </summary>
            <value>
            The month of the current date if it exists.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateApproximate.Day">
            <summary>
            Gets the day of the current date if it exists.
            </summary>
            <value>
            The day of the current date if it exists.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateApproximate.Hours">
            <summary>
            Gets the hours of the current date if it exists.
            </summary>
            <value>
            The hours of the current date if it exists.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateApproximate.Minutes">
            <summary>
            Gets the minutes of the current date if it exists.
            </summary>
            <value>
            The minutes of the current date if it exists.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateApproximate.Seconds">
            <summary>
            Gets the seconds of the current date if it exists.
            </summary>
            <value>
            The seconds of the current date if it exists.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateApproximate.TzHours">
            <summary>
            Gets the timezone hours of the current date if it exists.
            </summary>
            <value>
            The timezone hours of the current date if it exists.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateApproximate.TzMinutes">
            <summary>
            Gets the timezone minutes of the current date if it exists.
            </summary>
            <value>
            The timezone minutes of the current date if it exists.
            </value>
        </member>
        <member name="T:Gedcomx.Date.GedcomxDateDuration">
            <summary>
            Represents a GEDCOM X date span, measured from years to seconds.
            </summary>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateDuration.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.Date.GedcomxDateDuration"/> class.
            </summary>
            <param name="str">The formal duration string that describes a GEDCOM X duration.</param>
            <exception cref="T:Gedcomx.Date.GedcomxDateException">
            Thrown if the formal string is null, empty, or does not begin with 'P'.
            or
            Thrown if the formal string does not have a duration specified (the string after 'P').
            or
            Thrown if the formal string is a 5.3.2 non-normalized date (these are not yet implemented).
            </exception>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateDuration.ParseNormalizedDuration(System.String)">
            <summary>
            Parses the formal duration string and populates the results in this current instance.
            </summary>
            <param name="duration">The formal duration string to be parsed.</param>
            <exception cref="T:Gedcomx.Date.GedcomxDateException">
            Thrown if any of the current parsing expectations fail. A specific reason will be included at runtime.
            </exception>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateDuration.IsApproximate">
            <summary>
            Determines whether this date is approximate.  This method always returns <c>false</c> for this instance.
            </summary>
            <returns>
              <c>true</c> if this date is approximate; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateDuration.ToFormalString">
            <summary>
            The formal representation of this duration.
            </summary>
            <returns>
            The formal representation of this duration.
            </returns>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateDuration.Type">
            <summary>
            Gets the type of GEDCOM X date. This property always returns APPROXIMATE for this instance.
            </summary>
            <value>
            The type of GEDCOM X date.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateDuration.Years">
            <summary>
            Gets the years of the current duration if applicable.
            </summary>
            <value>
            The years of the current duration if applicable.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateDuration.Months">
            <summary>
            Gets the months of the current duration if applicable.
            </summary>
            <value>
            The months of the current duration if applicable.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateDuration.Days">
            <summary>
            Gets the days of the current duration if applicable.
            </summary>
            <value>
            The days of the current duration if applicable.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateDuration.Hours">
            <summary>
            Gets the hours of the current duration if applicable.
            </summary>
            <value>
            The hours of the current duration if applicable.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateDuration.Minutes">
            <summary>
            Gets the minutes of the current duration if applicable.
            </summary>
            <value>
            The minutes of the current duration if applicable.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateDuration.Seconds">
            <summary>
            Gets the seconds of the current duration if applicable.
            </summary>
            <value>
            The seconds of the current duration if applicable.
            </value>
        </member>
        <member name="T:Gedcomx.Date.GedcomxDateException">
            <summary>
            Represents exceptions when working with GEDCOM X dates.
            </summary>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.Date.GedcomxDateException"/> class.
            </summary>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.Date.GedcomxDateException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.Date.GedcomxDateException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.Date.GedcomxDateException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:Gedcomx.Date.GedcomxDateRange">
            <summary>
            Represents a GEDCOM X date range.
            </summary>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateRange.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.Date.GedcomxDateRange"/> class.
            </summary>
            <param name="date">The formal date string that describes a GEDCOM X date range.</param>
            <exception cref="T:Gedcomx.Date.GedcomxDateException">
            Thrown if the formal date is null, empty, or does not meet the expected format.
            </exception>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateRange.IsApproximate">
            <summary>
            Determines whether this date is approximate.
            </summary>
            <returns>
              <c>true</c> if this date is approximate; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateRange.ToFormalString">
            <summary>
            The formal representation of this date.
            </summary>
            <returns>
            The formal representation of this date.
            </returns>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateRange.Start">
            <summary>
            Gets the simple start date of the current date range.
            </summary>
            <value>
            The simple start date of the current date range.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateRange.Duration">
            <summary>
            Gets the duration between the start and end dates.
            </summary>
            <value>
            The duration between the start and end dates.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateRange.End">
            <summary>
            Gets the simple end date of the current date range.
            </summary>
            <value>
            The simple end date of the current date range.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateRange.Type">
            <summary>
            Gets the type of GEDCOM X date. This property always returns RANGE for this instance.
            </summary>
            <value>
            The type of GEDCOM X date.
            </value>
        </member>
        <member name="T:Gedcomx.Date.GedcomxDateRecurring">
            <summary>
            Represents a recurring GEDCOM X date.
            </summary>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateRecurring.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.Date.GedcomxDateRecurring"/> class.
            </summary>
            <param name="date">The recurring date string that describes a recurring GEDCOM X date.</param>
            <exception cref="T:Gedcomx.Date.GedcomxDateException">
            Thrown if the formal date string is null, empty, or fails to meet the expected format. The specific reason will be given at runtime.
            </exception>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateRecurring.GetNth(System.Int32)">
            <summary>
            Gets the nth instance of this recurring date.
            </summary>
            <param name="count">The nth instance to retrieve.</param>
            <returns>The simple date of the nth instance.</returns>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateRecurring.IsApproximate">
            <summary>
            Determines whether this date is approximate. This method always returns <c>false</c> for this instance.
            </summary>
            <returns>
              <c>true</c> if this date is approximate; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateRecurring.ToFormalString">
            <summary>
            The formal representation of this date.
            </summary>
            <returns>
            The formal representation of this date.
            </returns>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateRecurring.Count">
            <summary>
            Gets the count of recurring instances if applicable.
            </summary>
            <value>
            The count of recurring instances if applicable.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateRecurring.Range">
            <summary>
            Gets the <see cref="T:Gedcomx.Date.GedcomxDateRange"/> range of the current recurrences.
            </summary>
            <value>
            The range.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateRecurring.Start">
            <summary>
            Gets the simple start date of the recurring period.
            </summary>
            <value>
            The simple start date of the recurring period.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateRecurring.Duration">
            <summary>
            Gets the <see cref="T:Gedcomx.Date.GedcomxDateDuration"/> of the recurring period.
            </summary>
            <value>
            The the <see cref="T:Gedcomx.Date.GedcomxDateDuration"/> of the recurring period.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateRecurring.End">
            <summary>
            Gets the simple end date of the recurring period.
            </summary>
            <value>
            The simple end date of the recurring period.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateRecurring.Type">
            <summary>
            Gets the type of GEDCOM X date. This property always returns RECURRING for this instance.
            </summary>
            <value>
            The type of GEDCOM X date.
            </value>
        </member>
        <member name="T:Gedcomx.Date.GedcomxDateSimple">
            <summary>
            Represents a simple GEDCOM X date.
            </summary>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateSimple.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.Date.GedcomxDateSimple"/> class.
            </summary>
            <param name="date">The formal date string that describes a simple GEDCOM X date.</param>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateSimple.ParseDate(System.String)">
            <summary>
            Parses the date of the specified formal date string and loads the results into the current instance.
            </summary>
            <param name="date">The formal date string to parse.</param>
            <exception cref="T:Gedcomx.Date.GedcomxDateException">
            Thrown if the formal date string does not meet the expected format.
            </exception>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateSimple.ParseTime(System.String)">
            <summary>
            Parses the time portion of the formal string
            </summary>
            <param name="date">The formal date string, excluding the date.</param>
            <exception cref="T:Gedcomx.Date.GedcomxDateException">
            Thrown if the formal date string does not meet the expected format. The specific reason will be given at runtime.
            </exception>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateSimple.ParseTimezone(System.String)">
            Parse the timezone portion of the formal string
            @param date The date string (minus the date and time)
            <summary>
            Parses the timezone portion of the formal date string.
            </summary>
            <param name="date">The formal date string to parse (excluding the date and time).</param>
            <exception cref="T:Gedcomx.Date.GedcomxDateException">
            Thrown if the formal date string does not meet the expected format. The specific reason will be given at runtime.
            </exception>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateSimple.IsApproximate">
            <summary>
            Determines whether this date is approximate. This method always returns <c>false</c> for this instance.
            </summary>
            <returns>
              <c>true</c> if this date is approximate; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateSimple.ToFormalString">
            <summary>
            The formal representation of this date.
            </summary>
            <returns>
            The formal representation of this date.
            </returns>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateSimple.Type">
            <summary>
            Gets the type of GEDCOM X date. This property always returns SIMPLE for this instance.
            </summary>
            <value>
            The type of GEDCOM X date.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateSimple.Year">
            <summary>
            Gets the year of the current date if available.
            </summary>
            <value>
            The year of the current date if available.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateSimple.Month">
            <summary>
            Gets the month of the current date if available.
            </summary>
            <value>
            The month of the current date if available.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateSimple.Day">
            <summary>
            Gets the day of the current date if available.
            </summary>
            <value>
            The day of the current date if available.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateSimple.Hours">
            <summary>
            Gets the hours of the current date if available.
            </summary>
            <value>
            The hours of the current date if available.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateSimple.Minutes">
            <summary>
            Gets the minutes of the current date if available.
            </summary>
            <value>
            The minutes of the current date if available.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateSimple.Seconds">
            <summary>
            Gets the seconds of the current date if available.
            </summary>
            <value>
            The seconds of the current date if available.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateSimple.TzHours">
            <summary>
            Gets the timezone hours of the current date if available.
            </summary>
            <value>
            The timezone hours of the current date if available.
            </value>
        </member>
        <member name="P:Gedcomx.Date.GedcomxDateSimple.TzMinutes">
            <summary>
            Gets the timezone minutes of the current date if available.
            </summary>
            <value>
            The timezone minutes of the current date if available.
            </value>
        </member>
        <member name="T:Gedcomx.Date.GedcomxDateType">
            <summary>
            The supported types of GEDCOM X dates.
            </summary>
        </member>
        <member name="F:Gedcomx.Date.GedcomxDateType.SIMPLE">
            <summary>
            A simple GEDCOM X date
            </summary>
        </member>
        <member name="F:Gedcomx.Date.GedcomxDateType.APPROXIMATE">
            <summary>
            An approximate GEDCOM X date
            </summary>
        </member>
        <member name="F:Gedcomx.Date.GedcomxDateType.RANGE">
            <summary>
            A GEDCOM X date range
            </summary>
        </member>
        <member name="F:Gedcomx.Date.GedcomxDateType.DURATION">
            <summary>
            A GEDCOM X date duration or timespan
            </summary>
        </member>
        <member name="F:Gedcomx.Date.GedcomxDateType.RECURRING">
            <summary>
            A recurring GEDCOM X date
            </summary>
        </member>
        <member name="T:Gedcomx.Date.GedcomxDateUtil">
            <summary>
            A helper utility to manipulating and working with various GEDCOM X dates and strings.
            </summary>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateUtil.Parse(System.String)">
            Parse a String representation of a Formal GedcomX Date
            @param date The GedcomX Date
            @return A GedcomxDate
            <summary>
            Parses the specified formal date string representing a GEDCOM X date of any kind.
            </summary>
            <param name="date">The formal date string to parse.</param>
            <returns></returns>
            <exception cref="T:Gedcomx.Date.GedcomxDateException">
            Throw if the formal date string is null or empty.
            </exception>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateUtil.GetDuration(Gedcomx.Date.GedcomxDateSimple,Gedcomx.Date.GedcomxDateSimple)">
            <summary>
            Gets the duration between the two specified GEDCOM X dates.
            </summary>
            <param name="startDate">The simple start date.</param>
            <param name="endDate">The simple end date.</param>
            <returns>A <see cref="T:Gedcomx.Date.GedcomxDateDuration"/> representing the duration between the two specified dates.</returns>
            <exception cref="T:Gedcomx.Date.GedcomxDateException">
            Thrown if one of the input dates is null
            or
            Thrown if the start date occurs after the end date, or is equal to the end time.
            </exception>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateUtil.AddDuration(Gedcomx.Date.GedcomxDateSimple,Gedcomx.Date.GedcomxDateDuration)">
            <summary>
            Adds a duration to the specified simple date and returns the resulting simple date.
            </summary>
            <param name="startDate">The start date that will have the specified duration added.</param>
            <param name="duration">The duration to add to the specified simple date.</param>
            <returns>The <see cref="T:Gedcomx.Date.GedcomxDateSimple"/> date resulting from adding the duration to the specified date. </returns>
            <exception cref="T:Gedcomx.Date.GedcomxDateException">
            Throw if the start date is null
            or
            Thrown if the duration is null
            or
            Thrown if the resulting end year is beyond 9999.
            </exception>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateUtil.MultiplyDuration(Gedcomx.Date.GedcomxDateDuration,System.Int32)">
            <summary>
            Multiplies the duration by a fixed number.
            </summary>
            <param name="duration">The duration to be multiplied.</param>
            <param name="multiplier">The fixed number to multiply the duration.</param>
            <returns>The resulting <see cref="T:Gedcomx.Date.GedcomxDateDuration"/> after multiplying the specified duration by the fixed number.</returns>
            <exception cref="T:Gedcomx.Date.GedcomxDateException">
            Thrown if the duration is null
            or
            Thrown if the multiplier is negative or zero.
            </exception>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateUtil.ZipDates(Gedcomx.Date.GedcomxDateUtil.Date,Gedcomx.Date.GedcomxDateUtil.Date)">
            <summary>
            Ensures both specified dates have matching attributes. See remarks for more information.
            </summary>
            <param name="start">The start date to evaluate.</param>
            <param name="end">The end date to evaluate.</param>
            <remarks>
            If the start date has minutes specified but the end date does not have minutes specified,
            this method will initialize minutes on the end date.
            </remarks>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateUtil.ZipDuration(Gedcomx.Date.GedcomxDateUtil.Date,Gedcomx.Date.GedcomxDateDuration)">
            <summary>
            Ensures the specified date has matching attributes based off the duration attributes. See remarks for more information.
            </summary>
            <param name="date">The date to evaluate.</param>
            <param name="duration">The duration to use for evaluation.</param>
            <remarks>
            If the specified duration has minutes and the specified date does not, this will initialize the minutes on
            the specified date.
            
            Furthermore, for the level of granularity specified in the duration (e.g., down to the minute but not second),
            this method ensures the specified date has the same level of granularity and greater. So if the specified duration
            has minutes set, but the specified date does not have minutes or some greater unit not set, this will initialize
            the minutes on the specified date and all other levels of granularity greater than minutes. Thus hours would be set
            if not already, and so on. It's important to note, however, that just like <see cref="M:Gedcomx.Date.GedcomxDateUtil.ZipDates(Gedcomx.Date.GedcomxDateUtil.Date,Gedcomx.Date.GedcomxDateUtil.Date)"/>, this method will
            not initialize any unit for which a value is already set.
            
            Note: This method only writes to the specified date, and only reads the duration.
            </remarks>
        </member>
        <member name="T:Gedcomx.Date.GedcomxDateUtil.Date">
            <summary>
            A simplified representation of a date. Used as a bag of properties when performing caluclations.
            </summary>
        </member>
        <member name="F:Gedcomx.Date.GedcomxDateUtil.Date.year">
            <summary>
            The year this date represents if applicable.
            </summary>
        </member>
        <member name="F:Gedcomx.Date.GedcomxDateUtil.Date.month">
            <summary>
            The month this date represents if applicable.
            </summary>
        </member>
        <member name="F:Gedcomx.Date.GedcomxDateUtil.Date.day">
            <summary>
            The day this date represents if applicable.
            </summary>
        </member>
        <member name="F:Gedcomx.Date.GedcomxDateUtil.Date.hours">
            <summary>
            The hours this date represents if applicable.
            </summary>
        </member>
        <member name="F:Gedcomx.Date.GedcomxDateUtil.Date.minutes">
            <summary>
            The minutes this date represents if applicable.
            </summary>
        </member>
        <member name="F:Gedcomx.Date.GedcomxDateUtil.Date.seconds">
            <summary>
            The seconds this date represents if applicable.
            </summary>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateUtil.Date.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.Date.GedcomxDateUtil.Date"/> class.
            </summary>
        </member>
        <member name="M:Gedcomx.Date.GedcomxDateUtil.Date.#ctor(Gedcomx.Date.GedcomxDateSimple,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.Date.GedcomxDateUtil.Date"/> class.
            </summary>
            <param name="simple">The simple GEDCOM X date.</param>
            <param name="adjustTimezone">
            If set to <c>true</c> the resulting date hours and minutes will have the timezone hours and minutes added. See remarks for more information.
            </param>
            <remarks>
            The timezone adjustment is only applied when the adjustTimezone parameter is <c>true</c> and the incoming simple date hours and minutes are set. Thus,
            if the simple date hours are null, no adjustment will be made to the hours. Likewise, if the simple date minutes are null, no adjustment will be made
            to minutes.
            </remarks>
        </member>
    </members>
</doc>
